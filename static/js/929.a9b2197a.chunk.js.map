{"version":3,"file":"static/js/929.a9b2197a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/moviedetails.module.css?cdb3","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"boxMovie\":\"moviedetails_boxMovie__2mevV\",\"boxInfo\":\"moviedetails_boxInfo__vywLz\",\"linkList\":\"moviedetails_linkList__jSI3Q\",\"error\":\"moviedetails_error__73wo2\"};","import { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getMovieDetails } from \"services/api\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { Loader } from \"components/Loader/Loader\";\nimport styles from '../MovieDetails/moviedetails.module.css';\n\n\nconst MovieDetails = () => {\n    const [loading, setloading] = useState(false);\n    const [movieInfo, setMovieInfo] = useState('');\n\n    const { movie_id } = useParams();\n    const navigate = useNavigate();\n    const location = useLocation()\n    const backLink = location.state?.from ?? '/';\n\n    \n\n    useEffect(() => {\n        setloading(true)\n        const fetchMovDetails = async () => {\n            try {\n                const resp = await getMovieDetails(movie_id);\n                setMovieInfo(resp);\n            \n            }\n            catch (error) {\n                toast.error(\"Something wrong...\")\n            }\n            finally {\n                setloading(false);\n            }\n        }\n        fetchMovDetails()\n    }, [movie_id])\n    \n    const goBack = () => { navigate(backLink) };\n\n    const score = (movieInfo.vote_average * 10).toFixed(1);\n    const PATH_IMAGE = 'https://image.tmdb.org/t/p/w500';\n\n    return (\n        <main>\n            {loading && <Loader/>}\n            {movieInfo && (\n                <>\n            <button type=\"button\" onClick={goBack}>Go to back</button>\n                <div className={styles.boxMovie}>\n                        {movieInfo.backdrop_path ? (<img src={PATH_IMAGE + movieInfo.backdrop_path} alt={movieInfo.original_title} />) : <div className={styles.error}>Sorry, the path to image is broken or ampty</div>}\n                <div>        \n                <h2>{movieInfo.original_title}</h2>\n                <h3>User score: {score}</h3>\n                <h3>Overview:</h3>\n                <p>{movieInfo.overview}</p>\n                <h3>Genres:</h3>\n                <ul>\n                    {movieInfo.genres.map(({ id, name }) => (<li key={id} id={id}>{name}</li>))}\n                            </ul>\n                </div>\n                </div>\n                <div className={styles.boxInfo}>\n                    <h3>Addition information</h3>\n                    <ul className={styles.linkList}>\n                            <li>\n                                <Link to='credits' state={{from: '/'}}>Casts</Link>\n                            </li>\n                            <li>\n                                <Link to='reviews' state={{from: '/'}}>Reviews</Link>\n                            </li>\n                        </ul>\n                    <Outlet/>    \n                </div>    \n            </>)}\n            </main>\n)\n}\n\nexport default MovieDetails;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ec2e434cc9bc9d3a38f01279780f56eb';\n\nconst ENDPOINTS = {\n    POPULAR: '/trending/movie/day',\n    SEARCHWORD: '/search/movie',\n    MOVIE: '/movie',\n    CAST: '/credits',\n    REVIEWS: '/reviews',\n}\n\nexport function getPopularMovies() {\n    return axios.get(`${ENDPOINTS.POPULAR}?api_key=${API_KEY}`)\n        .then(response => response.data);\n}\n\nexport const getMovieDetails = async id => {\n    return axios.get(`${ENDPOINTS.MOVIE}/${id}?api_key=${API_KEY}`)\n    .then(response=> response.data)\n}\n\nexport const getMovieCasts = async id => {\n    return axios.get(`${ENDPOINTS.MOVIE}/${id}${ENDPOINTS.CAST}?api_key=${API_KEY}`)\n    .then(response => response.data)\n}\n\nexport const getMovieReviews = async id => {\n    return axios.get(`${ENDPOINTS.MOVIE}/${id}${ENDPOINTS.REVIEWS}?api_key=${API_KEY}`)\n     .then(response => response.data)\n}\n\nexport const getMovieSearch = async (query, page) => {\n    return axios.get(`${ENDPOINTS.SEARCHWORD}?api_key=${API_KEY}&query=${query}&page=${page}`)\n    .then(response => response.data)\n}\n\n"],"names":["_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","loading","setloading","_useState3","_useState4","movieInfo","setMovieInfo","movie_id","useParams","navigate","useNavigate","backLink","useLocation","state","from","useEffect","fetchMovDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","getMovieDetails","sent","t0","toast","finish","stop","apply","arguments","score","vote_average","toFixed","_jsxs","children","_jsx","Loader","_Fragment","type","onClick","className","styles","backdrop_path","src","alt","original_title","overview","genres","map","_ref2","id","name","Link","to","Outlet","axios","API_KEY","ENDPOINTS","getPopularMovies","concat","then","response","data","abrupt","_x","getMovieCasts","_callee2","_context2","_x2","getMovieReviews","_ref3","_callee3","_context3","_x3","getMovieSearch","_ref4","_callee4","query","page","_context4","_x4","_x5"],"sourceRoot":""}